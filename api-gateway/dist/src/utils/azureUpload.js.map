{"version":3,"file":"azureUpload.js","sourceRoot":"/","sources":["src/utils/azureUpload.ts"],"names":[],"mappings":";;;;;AAAA,sDAAwD;AACxD,uDAA+B;AAC/B,kEAA0C;AAE1C,MAAM,WAAW,GAAG,KAAK,EACvB,IAAyB,EACzB,aAAqB,EACrB,EAAE;IACF,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;IAEvD,IAAI,CAAC;QACH,MAAM,iBAAiB,GAAG,gCAAiB,CAAC,oBAAoB,CAC9D,gBAAM,CAAC,KAAK,CAAC,yBAAyB,CACvC,CAAC;QACF,4BAA4B;QAE5B,MAAM,eAAe,GAAG,iBAAiB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAC5E,MAAM,eAAe,CAAC,iBAAiB,CAAC;YACtC,MAAM,EAAE,WAAW;SACpB,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,yBAAyB,CAAC,CAAC;QAE7C,oDAAoD;QACpD,MAAM,eAAe,GAAG,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE1E,0BAA0B;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE3B,0BAA0B;QAC1B,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC;IAClB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;QACzD,MAAM,IAAI,kBAAQ,CAAC,GAAG,EAAE,gCAAgC,CAAC,CAAC;IAC5D,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,WAAW,CAAC","sourcesContent":["import { BlobServiceClient } from '@azure/storage-blob';\nimport config from '../config';\nimport ApiError from '../errors/apiError';\n\nconst azureUpload = async (\n  file: Express.Multer.File,\n  containerName: string,\n) => {\n  console.log('azureUpload called', file, containerName);\n\n  try {\n    const blobServiceClient = BlobServiceClient.fromConnectionString(\n      config.azure.storage_connection_string,\n    );\n    // Check if container exists\n\n    const containerClient = blobServiceClient.getContainerClient(containerName);\n    await containerClient.createIfNotExists({\n      access: 'container',\n    });\n\n    console.log(file, 'file inside azureUpload');\n\n    // Create blob client for the specific file location\n    const blockBlobClient = containerClient.getBlockBlobClient(file.filename);\n\n    // Read the file from disk\n    const buffer = file.buffer;\n\n    // Upload data to the blob\n    const response = await blockBlobClient.upload(buffer, buffer.length);\n    return response;\n  } catch (error) {\n    console.log('Got error while uploading to azure', error);\n    throw new ApiError(500, 'Error while uploading to azure');\n  }\n};\n\nexport default azureUpload;\n"]}