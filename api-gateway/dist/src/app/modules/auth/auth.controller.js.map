{"version":3,"file":"auth.controller.js","sourceRoot":"/","sources":["src/app/modules/auth/auth.controller.ts"],"names":[],"mappings":";;;;;;AAEA,wEAAoD;AACpD,iDAA6C;AAE7C,MAAM,gBAAgB,GAAG,KAAK,EAC5B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,QAAQ,GAAG,MAAM,0BAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAEzD,IAAA,kBAAY,EAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AACF,MAAM,QAAQ,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACzE,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QAEtC,MAAM,QAAQ,GAAG,MAAM,0BAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAEnC,IAAA,kBAAY,EAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,KAAK,EACxB,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,0BAAW,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAErD,IAAA,kBAAY,EAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AAEW,QAAA,cAAc,GAAG;IAC5B,gBAAgB;IAChB,QAAQ;IACR,YAAY;CACb,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { NextFunction, Request, Response } from 'express';\nimport sendResponse from '../../../shared/response';\nimport { AuthService } from './auth.service';\n\nconst registrationUser = async (\n  req: Request,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    console.log('registrationUser', req.body);\n    const response = await AuthService.registrationUser(req);\n\n    sendResponse(res, response);\n  } catch (error) {\n    next(error);\n  }\n};\nconst loginUer = async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    console.log('got req.body', req.body);\n\n    const response = await AuthService.loginUser(req);\n    console.log('loginUser', response);\n\n    sendResponse(res, response);\n  } catch (error) {\n    next(error);\n  }\n};\n\nconst checkSession = async (\n  req: Request,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const response = await AuthService.checkSession(req);\n\n    sendResponse(res, response);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const AuthController = {\n  registrationUser,\n  loginUer,\n  checkSession,\n};\n"]}