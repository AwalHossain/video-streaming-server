{"version":3,"file":"globalErrorHandler.js","sourceRoot":"/","sources":["src/app/middleware/globalErrorHandler.ts"],"names":[],"mappings":";;;;;AAAA,sDAAsD;AACtD,iCAAmC;AAEnC,0DAAkC;AAClC,qEAA6C;AAE7C,MAAM,sBAAsB,GAAwB,CAClD,KAAK,EACL,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;;IACF,IAAI,aAAa,GAGX,EAAE,CAAC;IAET,IAAI,UAAU,GAAG,GAAG,CAAC;IACrB,IAAI,OAAO,GAAG,sCAAsC,CAAC;IAErD,IAAI,KAAK,YAAY,kBAAU,EAAE,CAAC;QAChC,UAAU,GAAG,CAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,MAAM,KAAI,GAAG,CAAC;QAC3C,OAAO,GAAG,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,IAAI,0CAAE,OAAO,KAAI,sCAAsC,CAAC;QAClF,aAAa,GAAG,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,IAAI,0CAAE,aAAa,KAAI,EAAE,CAAC;IAC5D,CAAC;SAAM,IAAI,KAAK,YAAY,kBAAQ,EAAE,CAAC;QACrC,UAAU,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,CAAC;QAC/B,OAAO,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC;QACzB,aAAa,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO;YAC5B,CAAC,CAAC;gBACE;oBACE,IAAI,EAAE,EAAE;oBACR,OAAO,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO;iBACxB;aACF;YACH,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;SAAM,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;QAClC,OAAO,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC;QACzB,aAAa,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO;YAC5B,CAAC,CAAC;gBACE;oBACE,IAAI,EAAE,EAAE;oBACR,OAAO,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO;iBACxB;aACF;YACH,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;IAED,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;QAC1B,OAAO,EAAE,KAAK;QACd,OAAO;QACP,aAAa;QACb,KAAK,EAAE,gBAAM,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAC,CAAC,CAAC,SAAS;KAC9D,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,kBAAe,sBAAsB,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { AxiosError } from 'axios';\nimport { ErrorRequestHandler, NextFunction, Request, Response } from 'express';\nimport config from '../../config';\nimport ApiError from '../../errors/apiError';\n\nconst globalExceptionHandler: ErrorRequestHandler = (\n  error,\n  req: Request,\n  res: Response,\n  next: NextFunction,\n) => {\n  let errorMessages: {\n    path: string;\n    message: string;\n  }[] = [];\n\n  let statusCode = 500;\n  let message = 'Something went wrong in api-gateway!';\n\n  if (error instanceof AxiosError) {\n    statusCode = error.response?.status || 500;\n    message = error.response?.data?.message || 'Something went wrong in api-gateway!';\n    errorMessages = error.response?.data?.errorMessages || [];\n  } else if (error instanceof ApiError) {\n    statusCode = error?.statusCode;\n    message = error?.message;\n    errorMessages = error?.message\n      ? [\n          {\n            path: '',\n            message: error?.message,\n          },\n        ]\n      : [];\n  } else if (error instanceof Error) {\n    message = error?.message;\n    errorMessages = error?.message\n      ? [\n          {\n            path: '',\n            message: error?.message,\n          },\n        ]\n      : [];\n  }\n\n  res.status(statusCode).json({\n    success: false,\n    message,\n    errorMessages,\n    stack: config.env !== 'production' ? error?.stack : undefined,\n  });\n};\n\nexport default globalExceptionHandler;\n"]}