{"version":3,"file":"isAuthenticated.js","sourceRoot":"/","sources":["src/app/middleware/isAuthenticated.ts"],"names":[],"mappings":";AAAA,+BAA+B;;;;;AAG/B,qEAA6C;AAC7C,gDAAkD;AAClD,yCAA8C;AAE9C,MAAM,eAAe,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC1E,IAAI,CAAC;QACH,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;QAE7C,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,oBAAW,CAAC,KAAK,CAAC,cAAc,GAAG,GAAG,GAAG,yBAAyB,CAAC,CAAC;YACpE,MAAM,IAAI,kBAAQ,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;QAC1C,CAAC;QAED,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,oBAAW,CAAC,KAAK,CAAC,cAAc,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;YAC5D,MAAM,IAAI,kBAAQ,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;QAC1C,CAAC;QAED,eAAe;QACf,IAAI,YAAY,GAAG,IAAI,CAAC;QAExB,YAAY,GAAG,IAAA,iBAAW,EAAC,KAAK,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAC1C,GAAG,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC,yBAAyB;QAElD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QAElC,wBAAwB;QACxB,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,eAAe,CAAC","sourcesContent":["// disable eslint for this file\n\nimport { NextFunction, Request, Response } from 'express';\nimport ApiError from '../../errors/apiError';\nimport { errorLogger } from '../../shared/logger';\nimport { verifyToken } from '../../utils/jwt';\n\nconst isAuthenticated = (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const authHeader = req.headers.authorization;\n\n    if (!authHeader) {\n      errorLogger.error('Unauthorized' + ' ' + 'No Authorization header');\n      throw new ApiError(401, 'Unauthorized');\n    }\n\n    const token = authHeader.split(' ')[1];\n    console.log('authHeader', token);\n    if (!token) {\n      errorLogger.error('Unauthorized' + ' ' + 'Token not found');\n      throw new ApiError(401, 'Unauthorized');\n    }\n\n    // verify token\n    let verifiedUser = null;\n\n    verifiedUser = verifyToken(token);\n    console.log('verifiedUser', verifiedUser);\n    req.user = verifiedUser; // add user to req object\n\n    console.log('req.user', req.user);\n\n    // use role as authguard\n    next();\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport default isAuthenticated;\n"]}